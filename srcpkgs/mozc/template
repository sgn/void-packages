# Template file for 'mozc'
pkgname=mozc
# src/data/version/mozc_version_template.bzl
# revision is always 102, template always says 100 ;)
version=2.29.5291.100
revision=1
_commit=37090dd63ae7a3ad77bf0ad8ccbc80979b4f5565
_bazel_skylib=1.4.1
_bazel_rule_py=0.0.1
_abseil=20211102.0
_protobuf_commit=cc7b1b53234cd7a8f50d90ac3933b240dcf4cd97
_gyp=0.1+20220404git9ecf45e
_jpn_dict=e5b3425575734c323e1d947009dd74709437b684
# create_wrksrc=yes
build_wrksrc=src
hostmakedepends="gettext ninja pkg-config protobuf bazel qt6-base
 python3-six which qt5-qmake qt5-host-tools"
makedepends="gtk+-devel ibus-devel libzinnia-devel qt5-devel qt6-base-devel
 fcitx-devel libfcitx5-devel abseil-cpp-devel protobuf-devel libprotoc-devel"
depends="tegaki-zinnia-japanese>=0.3 mozc-base-${version}_${revision}"
short_desc="Japanese IME (Open Source version of Google Japanese Input)"
maintainer="Đoàn Trần Công Danh <congdanhqx@gmail.com>"
license="BSD-3-Clause"
homepage="https://github.com/google/mozc"
distfiles="
 https://github.com/fcitx/mozc/archive/$_commit.tar.gz
 https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/${_bazel_skylib}/bazel-skylib-${_bazel_skylib}.tar.gz
 https://github.com/bazelbuild/rules_python/releases/download/${_bazel_rule_py}/rules_python-${_bazel_rule_py}.tar.gz
 https://github.com/abseil/abseil-cpp/archive/refs/tags/$_abseil.tar.gz
 https://github.com/protocolbuffers/protobuf/archive/$_protobuf_commit.tar.gz
 https://github.com/hiroyuki-komatsu/japanese-usage-dictionary/archive/$_jpn_dict.tar.gz"
checksum="22b999c83a5454d16f831f801d54b6e2013e693bf17c82b0c8f2c4970513fa18
 b8a1527901774180afc798aeb28c4634bdccf19c4d98e7bdd1ce79d1fe9aaad7
 aa96a691d3a8177f3215b14b0edc9641787abaaa30363a080165d06ab65e1161
 dcf71b9cba8dc0ca9940c4b316a0c796be8fab42b070bb6b7cab62b48f0e66c4
 863e27f6d24f40bce2bbfe5adcf365f2af5479ea917f254331ee60ce88f8c8a5
 0b6efee0eebac2c1a8eeea333278aa40fcef7846bba9a379962c6e567e7e3dc1"

skip_extraction="
 bazel-skylib-${_bazel_skylib}.tar.gz
 rules_python-${_bazel_rule_py}.tar.gz
 $_abseil.tar.gz
 $_protobuf_commit.tar.gz
 $_jpn_dict.tar.gz"

CXXFLAGS="-D_GNU_SOURCE"
lib32disabled=yes

if [ "$XBPS_TARGET_ENDIAN" = "be" ]; then
	broken="Does not build"
fi

post_extract() {
	# mv mozc-* mozc

	vsrcextract -C src/third_party/abseil-cpp ${_abseil}.tar.gz
	vsrcextract -C src/third_party/japanese_usage_dictionary ${_jpn_dict}.tar.gz
	vsrcextract -C src/third_party/protobuf ${_protobuf_commit}.tar.gz
}

xdo_configure() {
	GYP_DEFINES="
	 document_dir=/usr/share/licenses/${pkgname}
	 ibus_mozc_path=/usr/libexec/ibus-engine-mozc
	 use_libzinnia=1
	 ${XBPS_TARGET_NO_ATOMIC8:+use_libatomic=1}
	" python3 build_mozc.py gyp --target_platform=Linux
}

do_build() {
	local _file _lang _tool
	local _modir=out_linux/Release/gen/unix/fcitx5/po

	: python3 build_mozc.py build \
		--use_gyp_for_ibus_build \
		-c Release \
		server/server.gyp:mozc_server \
		gui/gui.gyp:mozc_tool \
		unix/emacs/emacs.gyp:mozc_emacs_helper \
		unix/ibus/ibus.gyp:ibus_mozc \
		renderer/renderer.gyp:mozc_renderer \
		unix/fcitx/fcitx.gyp:fcitx-mozc \
		unix/fcitx5/fcitx5.gyp:fcitx5-mozc

	bazel build -c opt --copt="-fPIC $CFLAGS" --config oss_linux \
		gui/tool:mozc_tool \
		renderer/qt:mozc_renderer \
		server/mozc_server \
		unix/emacs:mozc_emacs_helper \
		unix/ibus:ibus_mozc \
		unix/fcitx:fcitx-mozc.so \
		unix/fcitx5:fcitx5-mozc.so

	mkdir -p $_modir
	for _file in unix/fcitx/po/*.po unix/fcitx5/po/*.po
	do
		_lang=${_file##*/}
		_lang=${_lang%.po}
		msgfmt "$_file" -o $_modir/$_lang.mo
	done
	msgfmt --xml -d unix/fcitx5/po \
		--template unix/fcitx5/org.fcitx.Fcitx5.Addon.Mozc.metainfo.xml.in \
		-o $_modir/org.fcitx.Fcitx5.Addon.Mozc.metainfo.xml

}

do_install() {
	local f
	# Base package
	vinstall out_linux/Release/mozc_server 755 usr/lib/mozc
	vlicense data/installer/credits_en.html license.html
	head -n 29 unix/fcitx5/fcitx_key_translator.cc >fcitx.LICENSE
	vlicense fcitx.LICENSE
	# emacs
	vbin out_linux/Release/mozc_emacs_helper
	vinstall unix/emacs/mozc.el 644 usr/share/emacs/site-lisp
	# Qt5 tools
	vinstall out_linux/Release/mozc_tool 755 usr/lib/mozc
	# ibus
	vinstall out_linux/Release/ibus_mozc 755 usr/libexec ibus-engine-mozc
	vinstall out_linux/Release/gen/unix/ibus/mozc.xml 644 \
		usr/share/ibus/component
	vinstall data/images/product_icon_32bpp-128.png 644 \
		usr/share/ibus-mozc product_icon.png
	for f in data/images/unix/48x48/*.png; do
		vinstall "$f" 644 usr/share/ibus-mozc
	done
	vinstall out_linux/Release/mozc_renderer 755 usr/lib/mozc
	# fcitx
	vinstall out_linux/Release/fcitx-mozc.so 644 usr/lib/fcitx
	vinstall unix/fcitx/fcitx-mozc.conf 644 usr/share/fcitx/addon
	vinstall unix/fcitx/mozc.conf 644 usr/share/fcitx/inputmethod
	vinstall data/images/product_icon_32bpp-128.png 644 \
		usr/share/fcitx/mozc/icon mozc.png
	for f in dictionary properties tool; do
		vinstall ../scripts/icons/ui-$f.png 644 \
			usr/share/fcitx/mozc/icon mozc-$f.png
	done
	for f in alpha_full alpha_half direct \
		hiragana katakana_full katakana_half; do
		vinstall data/images/unix/48x48/$f.png 644 \
			usr/share/fcitx/mozc/icon mozc-$f.png
	done
	# fcitx5
	vinstall out_linux/Release/fcitx5-mozc.so 644 usr/lib/fcitx5
	vinstall unix/fcitx5/mozc-addon.conf 644 \
		usr/share/fcitx5/addon mozc.conf
	vinstall unix/fcitx5/mozc.conf 644 usr/share/fcitx5/inputmethod
	vinstall data/images/product_icon_32bpp-128.png 644 \
		usr/share/icons/hicolor/128x128/apps fcitx-mozc.png
	vinstall data/images/unix/ime_product_icon_opensource-32.png 644 \
		usr/share/icons/hicolor/32x32/apps fcitx-mozc.png
	for f in dictionary properties tool; do
		vinstall ../scripts/icons/ui-$f.png 644 \
			usr/share/icons/hicolor/48x48/apps fcitx-mozc-$f.png
	done
	for f in alpha_full alpha_half direct \
		hiragana katakana_full katakana_half; do
		vinstall data/images/unix/48x48/$f.png 644 \
			usr/share/icons/hicolor/48x48/apps fcitx-mozc-${f/_/-}.png
	done
	vinstall out_linux/Release/gen/unix/fcitx5/po/org.fcitx.Fcitx5.Addon.Mozc.metainfo.xml \
		644 usr/share/metainfo/
}

mozc-base_package() {
	short_desc+=" - base installation"
	lib32disabled=yes
	replaces="emacs-mozc>=0"
	provides="emacs-mozc-${version}_${revision}"
	pkg_install() {
		vmove usr/bin
		vmove usr/lib/mozc/mozc_server
		vmove usr/share/emacs
		vmove usr/share/licenses
	}
}

ibus-mozc_package() {
	short_desc="Mozc engine for IBus - Client of the Mozc input method"
	depends="mozc-base-${version}_${revision} ibus>=1.5.14"
	lib32disabled=yes
	pkg_install() {
		vmove usr/libexec
		vmove usr/lib/mozc/mozc_renderer
		vmove "usr/share/ibus*"
	}
}

fcitx-mozc_package() {
	short_desc="Mozc engine for fcitx - Client of the Mozc input method"
	depends="mozc-base-${version}_${revision} fcitx>=4.2.9"
	homepage="https://fcitx-im.org/"
	lib32disabled=yes
	pkg_install() {
		local _file _lang
		vmove usr/lib/fcitx
		vmove usr/share/fcitx
		# vmove "usr/share/locale/*/LC_MESSAGES/fcitx-mozc.mo"
		for _file in out_linux/Release/gen/unix/fcitx/po/*.mo
		do
			_lang=${_file##*/}
			_lang=${_lang%.mo}
			vinstall "$_file" 644 \
				usr/share/locale/$_lang/LC_MESSAGES fcitx-mozc.mo
		done
	}
}

fcitx5-mozc_package() {
	short_desc="Mozc engine for fcitx v5"
	depends="mozc-base-${version}_${revision} fcitx5"
	homepage="https://fcitx-im.org/"
	lib32disabled=yes
	pkg_install() {
		local _file _lang
		vmove usr/lib/fcitx5
		vmove usr/share/fcitx5
		vmove usr/share/icons
		# vmove "usr/share/locale/*/LC_MESSAGES/fcitx5-mozc.mo"
		for _file in out_linux/Release/gen/unix/fcitx5/po/*.mo
		do
			_lang=${_file##*/}
			_lang=${_lang%.mo}
			vinstall "$_file" 644 \
				usr/share/locale/$_lang/LC_MESSAGES fcitx5-mozc.mo
		done
		vmove usr/share/metainfo
	}
}
